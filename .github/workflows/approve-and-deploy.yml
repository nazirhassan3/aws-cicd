name: Approve and Deploy API Gateway

on:
  workflow_dispatch:
    inputs:
      function:
        description: "Lambda Function to Deploy API Gateway For"
        required: true
        type: string

jobs:
  manual_approval:
    runs-on: ubuntu-latest
    steps:
      - name: Request Manual Approval
        run: echo "Waiting for manual approval to deploy API Gateway."

  deploy_apigateway:
    needs: manual_approval
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Publish Lambda Version for Prod
        run: |
          FUNCTION_NAME=${{ github.event.inputs.function }}
          ALIAS_NAME="prod"
          VERSION=$(aws lambda publish-version --function-name $FUNCTION_NAME --query Version --output text)

          ALIAS_EXISTS=$(aws lambda list-aliases --function-name $FUNCTION_NAME --query "Aliases[?Name=='$ALIAS_NAME']" --output text)

          if [[ -z "$ALIAS_EXISTS" ]]; then
            echo "Alias '$ALIAS_NAME' does not exist. Creating it..."
            aws lambda create-alias \
              --function-name $FUNCTION_NAME \
              --name $ALIAS_NAME \
              --function-version $VERSION
          else
            echo "Alias '$ALIAS_NAME' exists. Updating it..."
            aws lambda update-alias \
              --function-name $FUNCTION_NAME \
              --name $ALIAS_NAME \
              --function-version $VERSION
          fi

          echo "Alias '$ALIAS_NAME' now points to version $VERSION"

      - name: Deploy API Gateway to Prod
        run: |
          API_ID=$(aws apigateway get-rest-apis --query "items[?name=='${{ github.event.inputs.function }}'].id" --output text)
          aws apigateway update-integration \
            --api-id $API_ID \
            --integration-id <INTEGRATION_ID> \
            --integration-uri "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:443370673783:function:${{ github.event.inputs.function }}:prod/invocations"

          aws apigatewayv2 create-deployment --api-id $API_ID --stage-name prod
