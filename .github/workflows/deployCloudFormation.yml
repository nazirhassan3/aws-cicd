name: Deploy APIs with Multi-Stage

on:
  push:
    branches: nazir
    paths:
      - "src/cloudFormationTemplates/*.yaml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Detect Changed Templates
        id: detect
        run: |
          PREVIOUS_COMMIT=${{ github.event.before }}
          if [ -z "$PREVIOUS_COMMIT" ] || ! git rev-parse --verify "$PREVIOUS_COMMIT" >/dev/null 2>&1; then
            PREVIOUS_COMMIT=$(git rev-parse HEAD^ || echo "")
          fi

          echo "Comparing $PREVIOUS_COMMIT with ${{ github.sha }}"

          if [ -z "$PREVIOUS_COMMIT" ]; then
            CHANGED_FILES=$(git ls-files | grep '^src/cloudFormationTemplates/.*\.yaml$' || true)
          else
            CHANGED_FILES=$(git diff --name-only "$PREVIOUS_COMMIT" "${{ github.sha }}" | grep '^src/cloudFormationTemplates/.*\.yaml$' || true)
          fi

          # Use basename to extract just the file name, sort them, and output as JSON.
          CHANGED_TEMPLATES=$(echo "$CHANGED_FILES" | sort -u | jq -R -s -c 'split("\n")[:-1]')

          echo "Detected changed TEMPLATES: $CHANGED_TEMPLATES"
          echo "TEMPLATES=$CHANGED_TEMPLATES" >> "$GITHUB_OUTPUT"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Deploy Changed CF Templates
        if: steps.detect.outputs.TEMPLATES != ''
        run: |
          # Extract each file path from the JSON array.
          echo "Raw TEMPLATES: ${{ steps.detect.outputs.TEMPLATES }}"
          FILES=$(echo "${{ steps.detect.outputs.TEMPLATES }}" | jq -r '.[]')
          echo "Deploying the following CloudFormation templates:"
          echo "$FILES"
          for file in $FILES; do
            # Use the full relative path as provided.
            stackName=$(basename "$file" .yaml)
            echo "Deploying template: $file to stack: $stackName"
            aws cloudformation deploy \
              --stack-name "$stackName" \
              --template-file "$file" \
              --capabilities CAPABILITY_NAMED_IAM \
              --region us-east-1
          done

      - name: No CF Templates Changed
        if: steps.cffiles.outputs.files == ''
        run: echo "No CloudFormation template changes detected. Skipping deployment."
