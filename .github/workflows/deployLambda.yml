name: Deploy API Gateway & Lambda Integration

on:
  push:
    branches: nazir
    paths:
      - "src/**"
      - "iac/cloudformation-api.yaml"

jobs:
  deploy_dev:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Validate CloudFormation Template
        run: |
          aws cloudformation validate-template --template-body file://cloudformation-api.yaml --region ${{ env.AWS_REGION }}

      - name: Deploy CloudFormation Stack to Dev
        run: |
          aws cloudformation deploy \
            --stack-name MyManagedAPIStack-Dev \
            --template-file cloudformation-api.yaml \
            --parameter-overrides \
              ApiName=MyManagedAPI-Dev \
              LambdaFunctionArn=arn:aws:lambda:${{ env.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:MyLambdaFunction:dev \
              HtmlEndpoint=https://www.example.com/index.html \
              StageName=dev \
            --capabilities CAPABILITY_NAMED_IAM \
            --region ${{ env.AWS_REGION }}

  deploy_prod:
    name: Deploy to Prod Environment
    runs-on: ubuntu-latest
    environment:
      name: Production # This environment must be protected (set up in your GitHub repo settings)
    needs: deploy_dev
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Validate CloudFormation Template
        run: |
          aws cloudformation validate-template --template-body file://cloudformation-api.yaml --region ${{ env.AWS_REGION }}

      - name: Deploy CloudFormation Stack to Prod
        run: |
          aws cloudformation deploy \
            --stack-name MyManagedAPIStack-Prod \
            --template-file cloudformation-api.yaml \
            --parameter-overrides \
              ApiName=MyManagedAPI-Prod \
              LambdaFunctionArn=arn:aws:lambda:${{ env.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:MyLambdaFunction:prod \
              HtmlEndpoint=https://www.example.com/index.html \
              StageName=prod \
            --capabilities CAPABILITY_NAMED_IAM \
            --region ${{ env.AWS_REGION }}
