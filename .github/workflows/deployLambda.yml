name: Deploy Multiple APIs via CloudFormation

on:
  push:
    branches: nazir
    paths:
      - "iac/cloudformation-api.yaml"
      - "src/**"
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

jobs:
  deploy_apis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api_config:
          - api_name: "helloWorld"
            stack_name: "helloWorld-Dev"
            stage: "dev"
            lambda_function_arn: "arn:aws:lambda:us-east-1:${{ secrets.AWS_ACCOUNT_ID }}:function:helloWorld:dev"
            html_endpoint: "https://customerA.example.com/index.html"
            authorizer_lambda_arn: "arn:aws:lambda:us-east-1:${{ secrets.AWS_ACCOUNT_ID }}:function:auth"
          - api_name: "helloUser"
            stack_name: "helloUser-Dev"
            stage: "dev"
            lambda_function_arn: "arn:aws:lambda:us-east-1:${{ secrets.AWS_ACCOUNT_ID }}:function:helloUser:dev"
            html_endpoint: "https://customerB.example.com/index.html"
            authorizer_lambda_arn: "arn:aws:lambda:us-east-1:${{ secrets.AWS_ACCOUNT_ID }}:function:auth"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Validate CloudFormation Template
        run: |
          aws cloudformation validate-template --template-body file://iac/cloudformation-api.yaml --region ${{ env.AWS_REGION }}

      - name: Deploy API Stack
        run: |
          echo "Deploying API: ${{ matrix.api_config.api_name }} to stack: ${{ matrix.api_config.stack_name }}"
          aws cloudformation deploy \
            --stack-name "${{ matrix.api_config.stack_name }}" \
            --template-file iac/cloudformation-api.yaml \
            --parameter-overrides \
              ApiName=${{ matrix.api_config.api_name }} \
              LambdaFunctionArn=${{ matrix.api_config.lambda_function_arn }} \
              HtmlEndpoint=${{ matrix.api_config.html_endpoint }} \
              StageName=${{ matrix.api_config.stage }} \
              AuthorizerLambdaArn=${{ matrix.api_config.authorizer_lambda_arn }} \
            --capabilities CAPABILITY_NAMED_IAM \
            --region ${{ env.AWS_REGION }}
