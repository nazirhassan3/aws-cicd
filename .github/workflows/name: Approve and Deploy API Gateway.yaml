name: Approve and Deploy API Gateway

on:
  workflow_dispatch:
    inputs:
      function:
        description: "Lambda Function to Deploy API Gateway For"
        required: true
        type: string

jobs:
  manual_approval:
    runs-on: ubuntu-latest
    steps:
      - name: Request Manual Approval
        run: echo "Waiting for manual approval to deploy API Gateway."

  deploy_apigateway:
    needs: manual_approval
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get API Gateway ID
        id: get_api_id
        run: |
          API_NAME="api-${{ github.event.inputs.function }}"
          API_ID=$(aws apigatewayv2 get-apis --query "Items[?Name=='$API_NAME'].ApiId" --output text)
          echo "API Gateway ID: $API_ID"
          echo "API_ID=$API_ID" >> $GITHUB_ENV

      - name: Update API Gateway Integration to Use Latest Alias
        if: env.API_ID != ''
        run: |
          aws apigatewayv2 update-integration \
            --api-id $API_ID \
            --integration-id <INTEGRATION_ID> \
            --integration-uri "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:123456789012:function:${{ github.event.inputs.function }}:prod/invocations"

      - name: Deploy API Gateway
        run: |
          echo "Deploying API Gateway..."
          aws apigatewayv2 create-deployment --api-id $API_ID --stage-name prod
