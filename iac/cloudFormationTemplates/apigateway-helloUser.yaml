AWSTemplateFormatVersion: "2010-09-09"
Description: >
  API Gateway REST API with multiple resource paths and two stages (Dev and Prod).
  - /users: Integrated with a Lambda function (via AWS_PROXY).
  - /orders: Integrated with an external HTTP endpoint.
  Two stages are created, and the Lambda integration URI uses a stage variable to choose
  the appropriate Lambda alias (Dev or Prod).

Parameters:
  DeploymentTimestamp:
    Type: String
    Description: "Current deployment timestamp, passed externally (e.g., 20250310123000)"
Resources:
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: "HelloUser"
      Description: "API with multiple resource paths (users, orders, optional html) and two stages"

  CustomAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: "CustomLambdaAuthorizer"
      Type: TOKEN
      RestApiId: !Ref RestApi
      IdentitySource: method.request.header.Authorization
      AuthorizerUri: !Join
        - ""
        - - "arn:aws:apigateway:"
          - !Ref "AWS::Region"
          - ":lambda:path/2015-03-31/functions/"
          - "arn:aws:lambda:us-east-1:443370673783:function:auth"
          - "/invocations"
      AuthorizerResultTtlInSeconds: 300

  usagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn:
      - DevStage
      - ProdStage
    Properties:
      ApiStages:
        - ApiId: !Ref RestApi
          Stage: "dev"
      Description: Usage plan for hello User
      Quota:
        Limit: 500
        Period: MONTH
      Throttle:
        BurstLimit: 200
        RateLimit: 100
      UsagePlanName: Dummy Plan

  LambdaPermissionForAPIGatewayDev:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: helloUser:dev
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:us-east-1:443370673783:${RestApi}/*/*/*"

  LambdaPermissionForAPIGatewayProd:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: helloUser:prod
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:us-east-1:443370673783:${RestApi}/*/*/*"

  # Resource: /users integrated with Lambda (using stage variable)
  UsersResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: users
      RestApiId: !Ref RestApi

  UsersMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref UsersResource
      HttpMethod: GET
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref CustomAuthorizer
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Join
          - ""
          - - "arn:aws:apigateway:"
            - !Ref "AWS::Region"
            - ":lambda:path/2015-03-31/functions/"
            - "arn:aws:lambda:us-east-1:443370673783:function:helloUser"
            - ":"
            - "$"
            - "{stageVariables.lambdaAlias}"
            - "/invocations"
        RequestTemplates:
          # The dummy mapping forces a change when DeploymentVersion is updated.
          application/json: |
            {
              "dummy": "${DeploymentVersion}"
            }
      MethodResponses:
        - StatusCode: "200"

  # Resource: /orders integrated with an external HTTP endpoint
  ProductsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: products
      RestApiId: !Ref RestApi

  ProductsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref ProductsResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: GET
        Type: HTTP
        Uri: "https://dummyjson.com/products"
      MethodResponses:
        - StatusCode: "200"

  # Deployment resource without StageName so that stages are managed explicitly.
  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - UsersMethod
      - ProductsMethod
      - CustomAuthorizer
    Properties:
      RestApiId: !Ref RestApi
      Description: !Sub "ApiDeployment ${DeploymentTimestamp}"

  DevStage:
    Type: AWS::ApiGateway::Stage
    DependsOn: ApiDeployment
    Properties:
      StageName: dev
      RestApiId: !Ref RestApi
      DeploymentId: !Ref ApiDeployment
      Variables:
        lambdaAlias: "dev"

  ProdStage:
    Type: AWS::ApiGateway::Stage
    DependsOn: ApiDeployment
    Properties:
      StageName: prod
      RestApiId: !Ref RestApi
      DeploymentId: !Ref ApiDeployment
      Variables:
        lambdaAlias: "prod"

  # Deployment:
  #   Type: AWS::ApiGateway::Deployment
  #   DependsOn:
  #     - UsersMethod
  #     - ProductsMethod
  #     - CustomAuthorizer
  #     - usagePlan
  #   Properties:
  #     RestApiId: !Ref RestApi
  #     Description: Development Stage New
  #     StageName: dev

Outputs:
  ApiUrlDev:
    Description: "Dev API URL"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/dev"
  ApiUrlProd:
    Description: "Prod API URL"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
