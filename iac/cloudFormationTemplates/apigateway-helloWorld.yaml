AWSTemplateFormatVersion: "2010-09-09"
Description: >
  API Gateway REST API with multiple resource paths and two stages (Dev and Prod).
  - /users: Integrated with a Lambda function (via AWS_PROXY).
  - /orders: Integrated with an external HTTP endpoint.
  - /html (optional): Integrated with an HTML endpoint.
  Two stages are created, and the Lambda integration URI uses a stage variable to choose
  the appropriate Lambda alias (Dev or Prod).

Resources:
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: "HelloWorld"
      Description: "API with multiple resource paths (users, orders, optional html) and two stages"

  CustomAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: "CustomLambdaAuthorizer"
      Type: TOKEN
      RestApiId: !Ref RestApi
      IdentitySource: method.request.header.Authorization
      # Use Fn::Sub with a literal placeholder for stageVariables.lambdaAlias using Fn::Join
      AuthorizerUri: !Join
        - ""
        - - "arn:aws:apigateway:"
          - !Ref "AWS::Region"
          - ":lambda:path/2015-03-31/functions/"
          - "arn:aws:lambda:us-east-1:443370673783:function:auth"
          - "/invocations"
      AuthorizerResultTtlInSeconds: 300

  # Resource: /users integrated with Lambda (using stage variable)
  WorldResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: world
      RestApiId: !Ref RestApi

  WorldMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref WorldResource
      HttpMethod: GET
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref CustomAuthorizer
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Join
          - ""
          - - "arn:aws:apigateway:"
            - !Ref "AWS::Region"
            - ":lambda:path/2015-03-31/functions/"
            - "arn:aws:lambda:us-east-1:443370673783:function:helloWorld"
            - ":"
            - "$"
            - "{stageVariables.lambdaAlias}"
            - "/invocations"
      MethodResponses:
        - StatusCode: "200"

  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - WorldMethod
      - CustomAuthorizer
    Properties:
      RestApiId: !Ref RestApi

  DevStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: dev
      RestApiId: !Ref RestApi
      DeploymentId: !Ref ApiDeployment
      Variables:
        lambdaAlias: "dev"

  ProdStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: prod
      RestApiId: !Ref RestApi
      DeploymentId: !Ref ApiDeployment
      Variables:
        lambdaAlias: "prod"

Outputs:
  ApiUrlDev:
    Description: "Dev API URL"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/dev"
  ApiUrlProd:
    Description: "Prod API URL"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
