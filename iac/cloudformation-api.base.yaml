AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Base API Gateway REST API template.
  Defines common resources:
    - RestApi
    - CustomAuthorizer
    - A fixed /lambda resource with a default method
    - An optional /html resource

Parameters:
  ApiName:
    Type: String
    Description: The name of the API Gateway API.
  LambdaFunctionArn:
    Type: String
    Description: ARN of the Lambda function for the /lambda integration.
  HtmlEndpoint:
    Type: String
    Description: URL for the /html integration. Leave empty if not used.
    Default: ""
  StageName:
    Type: String
    Description: Deployment stage (e.g., dev, prod).
  AuthorizerLambdaArn:
    Type: String
    Description: ARN of the Lambda function for the custom authorizer (base ARN only).

Conditions:
  CreateHtmlResource: !Not [!Equals [!Ref HtmlEndpoint, ""]]

Resources:
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiName
      Description: "API Gateway managed via CloudFormation and GitHub Actions"

  CustomAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: "MyLambdaAuthorizer"
      Type: TOKEN
      RestApiId: !Ref RestApi
      IdentitySource: method.request.header.Authorization
      AuthorizerUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthorizerLambdaArn}/invocations"
      AuthorizerResultTtlInSeconds: 300

  LambdaBaseResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: lambda
      RestApiId: !Ref RestApi

  DefaultLambdaMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref LambdaBaseResource
      HttpMethod: ANY
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref CustomAuthorizer
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations"
      MethodResponses:
        - StatusCode: 200

  HtmlResource:
    Type: AWS::ApiGateway::Resource
    Condition: CreateHtmlResource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: html
      RestApiId: !Ref RestApi

  HtmlMethod:
    Type: AWS::ApiGateway::Method
    Condition: CreateHtmlResource
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref HtmlResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: GET
        Type: HTTP
        Uri: !Ref HtmlEndpoint
      MethodResponses:
        - StatusCode: 200
