AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Parameterized API Gateway REST API.
  This template defines:
    - A REST API with resources and methods.
    - A Lambda integration (e.g. for /lambda).
    - An HTTP integration (e.g. for /html).
    - A custom Lambda authorizer.

Parameters:
  ApiName:
    Type: String
    Description: The name of the API Gateway API.
  LambdaFunctionArn:
    Type: String
    Description: ARN of the Lambda function for the /lambda integration.
  HtmlEndpoint:
    Type: String
    Description: URL for the /html integration. If empty, the resource is not created.
    Default: ""
  StageName:
    Type: String
    Description: Deployment stage (e.g., dev, prod).
  AuthorizerLambdaArn:
    Type: String
    Description: ARN of the Lambda function for the custom authorizer (base ARN without alias).

Conditions:
  CreateHtmlResource: !Not [!Equals [!Ref HtmlEndpoint, ""]]

Resources:
  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref ApiName
      Description: "API managed via CloudFormation and GitHub Actions"

  # Custom Authorizer (always created)
  CustomAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: "MyLambdaAuthorizer"
      Type: TOKEN
      RestApiId: !Ref RestApi
      IdentitySource: method.request.header.Authorization
      AuthorizerUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AuthorizerLambdaArn}/invocations"
      AuthorizerResultTtlInSeconds: 300

  # Resource for Lambda integration (/lambda)
  LambdaResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: lambda
      RestApiId: !Ref RestApi

  LambdaMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref LambdaResource
      HttpMethod: ANY
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref CustomAuthorizer
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations"
      MethodResponses:
        - StatusCode: 200

  # Optional Resource for HTML integration (/html)
  HtmlResource:
    Type: AWS::ApiGateway::Resource
    Condition: CreateHtmlResource
    Properties:
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: html
      RestApiId: !Ref RestApi

  HtmlMethod:
    Type: AWS::ApiGateway::Method
    Condition: CreateHtmlResource
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref HtmlResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: GET
        Type: HTTP
        Uri: !Ref HtmlEndpoint
      MethodResponses:
        - StatusCode: 200

  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - LambdaMethod
      - CustomAuthorizer
    Properties:
      RestApiId: !Ref RestApi
      StageName: !Ref StageName

Outputs:
  ApiUrl:
    Description: "Base URL for the API Gateway"
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}"
